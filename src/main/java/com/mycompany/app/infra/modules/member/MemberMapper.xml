<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- 	 전체 매퍼중에서 유일한 값을 사용하여야 한다.
     해서 관계적으로 해당 파일의 패스와 파일이름 (확장자 제외)
     그리고 dao에서 namespace와 일치하여야 한다. -->
	<mapper namespace="com.mycompany.app.infra.modules.member.MemberMapper">		
							
										<!-- 	select 결과를 받을 객체 -->
    <resultMap id="resultMapObj" type="com.mycompany.app.infra.modules.member.Member"></resultMap>

    <sql id="abc">

    	seq
    	, name
    	, id
    	, nickname
    	, password
    	, email
    	, address 	
    	, phone
    	, delNy
    </sql>
    
    <sql id ="selectCommon">
   		FROM    
	    	member

		WHERE 1=1
			<if test="shKeyword != null and !shKeyword.equals('')">AND name LIKE CONCAT('%',#{shKeyword},'%')
																   OR id LIKE CONCAT('%', #{shKeyword}, '%')
																   OR nickname LIKE CONCAT('%', #{shKeyword}, '%')
																   OR password LIKE CONCAT('%', #{shKeyword}, '%')
			           											   OR email LIKE CONCAT('%', #{shKeyword}, '%')
			           											   OR address LIKE CONCAT('%', #{shKeyword}, '%')
            													   OR phone LIKE CONCAT('%', #{shKeyword}, '%')									   
			</if>
    </sql>

   	<select id="selectOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="selectCommon" />
	</select>
	
   	<select id="selectList" resultMap="resultMapObj">
		SELECT bb.* FROM (   	
	   		SELECT
				<include refid="abc" />
	   			<include refid="selectCommon" />
		) bb
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}	   			
   	</select>

    <!-- <select id="selectList" resultMap="resultMapObj">
        SELECT
        	<include refid="abc" />
        FROM
        	member
        WHERE 1=1
        <if test="shKeyword != null and !shKeyword.equals('')">AND NAME LIKE CONCAT('%',#{shKeyword},'%')</if>
    </select> -->


    <select id="selectOne" resultMap="resultMapObj">
        SELECT
        	seq
        	, name
        	, id
        FROM
        	member
        WHERE 1=1
        	AND id = #{id}
        	AND password = #{password}
        	
    </select>
    
    
     <select id="selectOneCheckId" resultType="Integer">
        SELECT
			COUNT(seq)
        FROM
        	member
        WHERE 1=1
        	AND id = #{id}

        	
    </select>
    
    
    

<!-- =============================================================== -->
    <update id="update">
        UPDATE
        	member
        SET
			  name = #{name}
	    	, id = #{id}
	    	, nickname = #{nickname}
	    	, password = #{password}
	    	, email = #{email}
	    	, address =	#{address}
	    	, phone = #{phone}


        WHERE
        	seq = #{seq}
    </update>

    <delete id="delete">
        DELETE
        FROM
        	member
        WHERE 
        	seq = #{seq}
    </delete>

    <insert id="insert">
        INSERT INTO member (
			  name
	    	, id
	    	, nickname
	    	, password
	    	, email
	    	, address
	    	, phone
   	    	, delNy

	    	
        ) VALUES (
        	#{name}
        	,#{id}        	
        	,#{nickname}  
        	,#{password} 
        	,#{email} 
        	,#{address} 
        	,#{phone} 
        	,0
       	

        )
        		<selectKey resultType="String" keyProperty="seq" order="AFTER">
				SELECT last_insert_id()
		 	</selectKey>
    </insert>

    <update id="uelete">
    UPDATE
    	member	
    SET
    	delNy = "1"
    WHERE 1=1
    AND 
    	seq = #{seq}
    </update>

</mapper>    